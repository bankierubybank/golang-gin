# Ref: https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: ci

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    branches:
      - main

jobs:
  # sca:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v3

  #     - name: Set up Go 1.x in order to write go.list file
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ^1.19
  #     - name: WriteGoList
  #       run: go list -json -m all > go.list

  #     - name: Nancy
  #       uses: sonatype-nexus-community/nancy-github-action@main

  chain_bench_scan_example:
    runs-on: ubuntu-latest
    name: Test Job
    steps:
      - name: Chain Bench
        id: chain-bench
        uses: aquasecurity/chain-bench-action@v1.1.1
        with:
          # repository-url: ${{ github.server_url }}/${{ github.repository }} # Compiles to https://github.com/aquasecurity/chain-bench-action
          repository-url: https://github.com/bankierubybank/golang-gin
          github-token: ${{ secrets.GOLANGGIN_GHPAT }}
          scm-platform: github # Optional parameter for dedicated SCM servers

      # Using the github action output from the scan step "chain-bench-result" (JSON so you can run rego/jq against it)
      - name: Echo
        run: echo ${{ steps.chain-bench.outputs.chain-bench-result }}

  sast:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: off
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail ./...'

  build:
    # Change runner image from Debian to Ubuntu as GitHub-hosted runners doesn't have Debian
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#choosing-github-hosted-runners
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/golang-gin:latest
